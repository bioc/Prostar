getwd()
shiny::runApp('/Volumes/Data/Projets/KDD-Tools/Github/Prostar/inst/ProstarApp')
library(RColorBrewer)
runApp('/Volumes/Data/Projets/KDD-Tools/Github/Prostar/inst/ProstarApp')
runApp('/Volumes/Data/Projets/KDD-Tools/Github/Prostar/inst/ProstarApp')
runApp('/Volumes/Data/Projets/KDD-Tools/Github/Prostar/inst/ProstarApp')
runApp('/Volumes/Data/Projets/KDD-Tools/Github/Prostar/inst/ProstarApp')
library(shiny)
library(shinyjs)
NUM_PAGES <- 5
ui <- fluidPage(
useShinyjs(),
hidden(
lapply(seq(NUM_PAGES), function(i) {
div(
class = "page",
id = paste0("step", i),
"Step", i
)
})
),
br(),
actionButton("prevBtn", "< Previous"),
actionButton("nextBtn", "Next >")
)
server <- function(input, output, session) {
rv <- reactiveValues(page = 1)
observe({
toggleState(id = "prevBtn", condition = rv$page > 1)
toggleState(id = "nextBtn", condition = rv$page < NUM_PAGES)
hide(selector = ".page")
show(paste0("step", rv$page))
})
navPage <- function(direction) {
rv$page <- rv$page + direction
}
observeEvent(input$prevBtn, navPage(-1))
observeEvent(input$nextBtn, navPage(1))
}
shinyApp(ui, server)
runApp('/Volumes/Data/Projets/KDD-Tools/Github/Prostar/inst/ProstarApp')
runApp('/Volumes/Data/Projets/KDD-Tools/Github/Prostar/inst/ProstarApp')
toto <- c("A", "B", "C")
grep("B", toto)
grep("D", toto)
match("D", toto)
match("B", toto)
runApp('/Volumes/Data/Projets/KDD-Tools/Github/Prostar/inst/ProstarApp')
runApp('/Volumes/Data/Projets/KDD-Tools/Github/Prostar/inst/ProstarApp')
runApp('/Volumes/Data/Projets/KDD-Tools/Github/Prostar/inst/ProstarApp')
runApp('/Volumes/Data/Projets/KDD-Tools/Github/Prostar/inst/ProstarApp')
runApp('/Volumes/Data/Projets/KDD-Tools/Github/Prostar/inst/ProstarApp')
runApp('/Volumes/Data/Projets/KDD-Tools/Github/Prostar/inst/ProstarApp')
runApp('/Volumes/Data/Projets/KDD-Tools/Github/Prostar/inst/ProstarApp')
brewer.pal(1)
brewer.pal(1, "dark2")
brewer.pal(1, "Dark2")
runApp('/Volumes/Data/Projets/KDD-Tools/Github/Prostar/inst/ProstarApp')
runApp('/Volumes/Data/Projets/KDD-Tools/Github/Prostar/inst/ProstarApp')
runApp('/Volumes/Data/Projets/KDD-Tools/Github/Prostar/inst/ProstarApp')
floor(5/2)
conds <- c("A", "A", "A", "A", "A", "B", "B", "B", "C", "C")
nbConds <- length(conds)
conditions <- unique(conds)
rep <- NULL
i <- 1
for (c in conditions){
samples <- which(conds == c)
nSamples <- length(samples)
rep <- c(rep, rep(i, floor(nSamples/2)))
i <- i +1
rep <- c(rep, rep(i, nSamples-floor(nSamples/2)))
i <- i +1
}
rep
runApp('/Volumes/Data/Projets/KDD-Tools/Github/Prostar/inst/ProstarApp')
runApp('/Volumes/Data/Projets/KDD-Tools/Github/Prostar/inst/ProstarApp')
runApp('/Volumes/Data/Projets/KDD-Tools/Github/Prostar/inst/ProstarApp')
